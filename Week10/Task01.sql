--CREATE DATABASE Flights;

USE Flights;

--CREATE TABLE Airline(
--	CODE CHAR(2),
--	NAME VARCHAR(50),
--	COUNTRY VARCHAR(50)
--)

--CREATE TABLE Booking(
--	CODE INT,
--	AGENCY VARCHAR(50),
--	AIRLINE_CODE CHAR(2),
--	FLIGHT_NUM INT,
--	CUSTOMER_ID INT,
--	RESERV_DATE DATE,
--	FLIGHT_DATE DATE,
--	PRICE DECIMAL(10, 2),
--	STATUS VARCHAR(50)
--)

--CREATE TABLE Agency(
--	NAME VARCHAR(50),
--	COUNTRY VARCHAR(50),
--	CITY VARCHAR(50),
--	PHONE_NUM VARCHAR(50)
--)

--CREATE TABLE Airplane(
--	CODE CHAR(3),
--	TYPE VARCHAR(50),
--	SEATS INT,
--	YEAR INT
--)

--CREATE TABLE Flight(
--	FNUMBER INT,
--	AIRLINE_OP CHAR(2),
--	DEP_AIRPORT CHAR(3),
--	ARR_AIRPORT CHAR(3),
--	FLIGHT_TIME TIME,
--	FLIGHT_DUR TIME,
--	AIRPLANE CHAR(3)
--)

--CREATE TABLE Customer(
--	ID INT,
--	FIRST_NAME VARCHAR(50),
--	LAST_NAME VARCHAR(50),
--	EMAIL VARCHAR(50)
--)

--CREATE TABLE Airport(
--	CODE CHAR(3),
--	NAME VARCHAR(50),
--	COUNTRY VARCHAR(50),
--	CITY VARCHAR(50)
--)

--2) За отделните релации задайте подходящи:
--a) първичен ключ
--ALTER TABLE Airline ALTER COLUMN CODE CHAR(2) NOT NULL;
--ALTER TABLE Airline ADD CONSTRAINT PK_Airline PRIMARY KEY (CODE);

--ALTER TABLE Airport ALTER COLUMN CODE CHAR(3) NOT NULL;
--ALTER TABLE Airport ADD CONSTRAINT PK_Airport PRIMARY KEY (CODE)

--ALTER TABLE Airplane ALTER COLUMN CODE CHAR(3) NOT NULL
--ALTER TABLE Airplane ADD CONSTRAINT PK_Airplane PRIMARY KEY (CODE)

--ALTER TABLE Flight ALTER COLUMN FNUMBER INT NOT NULL
--ALTER TABLE Flight ADD CONSTRAINT PK_Flight PRIMARY KEY (FNUMBER)

--ALTER TABLE Customer ALTER COLUMN ID INT NOT NULL
--ALTER TABLE Customer ADD CONSTRAINT PK_Customer PRIMARY KEY (ID)

--ALTER TABLE Agency ALTER COLUMN name VARCHAR(50) NOT NULL
--ALTER TABLE Agency ADD CONSTRAINT PK_Agency PRIMARY KEY (name)

--ALTER TABLE Booking ALTER COLUMN code INT NOT NULL
--ALTER TABLE Booking ADD CONSTRAINT PK_Booking PRIMARY KEY (code)

--b) ограничения за референтна цялостност, напр.:
--- код на авиокомпанията от релациите Flight и Booking трябва да съществува
--в релацията Airline;--ALTER TABLE Flight ADD CONSTRAINT FK_FLIGHT_AIRLINE FOREIGN KEY (AIRLINE_OP) REFERENCES Airline(CODE);--ALTER TABLE Booking ADD CONSTRAINT FK_BOOKING_AIRLINE FOREIGN KEY (AIRLINE_CODE) REFERENCES Airline(CODE);--код на летище на излитане и код на летище на кацане от релацията Flight
--трябва да съществува в релацията Airport;
--ALTER TABLE Flight ADD CONSTRAINT FK_FLIGHT_AIRPORTDEP FOREIGN KEY (DEP_AIRPORT) REFERENCES Airport(CODE);
--ALTER TABLE Flight ADD CONSTRAINT FK_FLIGHT_AIRPORTARR FOREIGN KEY (ARR_AIRPORT) REFERENCES Airport(CODE);

--код на самолета от релацията Flight трябва да съществува в релацията
--Airplane;
--ALTER TABLE Flight ADD CONSTRAINT FK_FLIGHT_AIRPLANE FOREIGN KEY (AIRPLANE) REFERENCES Airplane(CODE);

--име на агенция от релацията Booking трябва да съществува в релацията Agency;
--ALTER TABLE Booking ADD CONSTRAINT FK_BOOKING_AGENCY FOREIGN KEY (AGENCY) REFERENCES Agency(NAME);

--номер на полет от релацията Booking трябва да съществува в релацията Flight;
--ALTER TABLE Booking ADD CONSTRAINT FK_BOOKING_FLIGHT FOREIGN KEY (FLIGHT_NUM) REFERENCES Flight(FNUMBER);

--идентификационен номер на клиент от релацията Booking трябва да съществува в релацията Customer;
--ALTER TABLE Booking ADD CONSTRAINT FK_BOOKING_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES Customer(ID);

--c) NULL или NOT NULL ограничение
--ALTER TABLE Airline ALTER COLUMN NAME VARCHAR(50) NOT NULL;
--ALTER TABLE Airline ALTER COLUMN COUNTRY VARCHAR(50) NOT NULL;
--ALTER TABLE Airport ALTER COLUMN NAME VARCHAR(50) NOT NULL;
--ALTER TABLE Airport ALTER COLUMN COUNTRY VARCHAR(50) NOT NULL;
--ALTER TABLE Airport ALTER COLUMN CITY VARCHAR(50) NOT NULL;
--ALTER TABLE Airplane ALTER COLUMN TYPE VARCHAR(50) NOT NULL;
--ALTER TABLE Airplane ALTER COLUMN SEATS INT NOT NULL;
--ALTER TABLE Airplane ALTER COLUMN YEAR INT NOT NULL;
--ALTER TABLE Flight ALTER COLUMN AIRLINE_OP CHAR(2) NOT NULL;
--ALTER TABLE Flight ALTER COLUMN DEP_AIRPORT CHAR(3) NOT NULL;
--ALTER TABLE Flight ALTER COLUMN ARR_AIRPORT CHAR(3) NOT NULL;
--ALTER TABLE Flight ALTER COLUMN FLIGHT_TIME TIME NOT NULL;
--ALTER TABLE Flight ALTER COLUMN FLIGHT_DUR TIME NOT NULL;
--ALTER TABLE Flight ALTER COLUMN AIRPLANE CHAR(3) NOT NULL;
--ALTER TABLE Customer ALTER COLUMN FIRST_NAME VARCHAR(50) NOT NULL;
--ALTER TABLE Customer ALTER COLUMN LAST_NAME VARCHAR(50) NOT NULL;
--ALTER TABLE Customer ALTER COLUMN EMAIL VARCHAR(50) NOT NULL;
--ALTER TABLE Agency ALTER COLUMN NAME VARCHAR(50) NOT NULL;
--ALTER TABLE Agency ALTER COLUMN COUNTRY VARCHAR(50) NOT NULL;
--ALTER TABLE Agency ALTER COLUMN CITY VARCHAR(50) NOT NULL;
--ALTER TABLE Agency ALTER COLUMN PHONE_NUM VARCHAR(50) NOT NULL;
--ALTER TABLE Booking ALTER COLUMN AGENCY VARCHAR(50) NOT NULL;
--ALTER TABLE Booking ALTER COLUMN AIRLINE_CODE CHAR(2) NOT NULL;
--ALTER TABLE Booking ALTER COLUMN FLIGHT_NUM INT NOT NULL;
--ALTER TABLE Booking ALTER COLUMN CUSTOMER_ID INT NOT NULL;
--ALTER TABLE Booking ALTER COLUMN RESERV_DATE DATE NOT NULL;
--ALTER TABLE Booking ALTER COLUMN FLIGHT_DATE DATE NOT NULL;
--ALTER TABLE Booking ALTER COLUMN PRICE DECIMAL(10,2) NOT NULL;
--ALTER TABLE Booking ALTER COLUMN STATUS VARCHAR(50) NOT NULL;

--d) UNIQUE ограничение, напр.:
--- името на авиокомпанията от релацията Airline да бъде уникално
--ALTER TABLE Airline	ADD CONSTRAINT UQ_AIRLINE_NAME UNIQUE(NAME);

--- името на летището от релацията Airport да бъде уникално в рамките на една и съща държава
--ALTER TABLE Airport ADD CONSTRAINT UQ_AIRPORT_NAME UNIQUE(NAME, COUNTRY);

--e) CHECK ограничение, напр.
--- Броят места в самолета от релацията Airplane не трябва да е по-малък или равен на нула.
--ALTER TABLE Airplane ADD CONSTRAINT CHK_AIRPLANE_SEATS CHECK (SEATS>0);

--- Датата на полета от релацията Booking трябва да бъде след или в деня на датата на резервация на билета.
--ALTER TABLE Booking ADD CONSTRAINT CHK_BOOKING_FLIGHTDATE CHECK (FLIGHT_DATE>=RESERV_DATE);

--- Проверка за валидност на email-а на клиента от релацията Customer.
--- Валиден email адрес, съдържа символите @ и точка, като задължително има поне шест символа.
--ALTER TABLE Customer ADD CONSTRAINT CHK_CUSTOMER_EMAIL CHECK (EMAIL LIKE '%@%.%' AND LEN(EMAIL) >= 6);

--- Състоянието на резервацията от релацията Booking може да е 0 или 1.
ALTER TABLE Booking ADD CONSTRAINT CHK_BOOKING_STATUS CHECK (STATUS IN ('0', '1'));